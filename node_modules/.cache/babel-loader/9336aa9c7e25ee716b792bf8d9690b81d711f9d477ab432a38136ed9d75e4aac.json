{"ast":null,"code":"var _jsxFileName = \"D:\\\\Telstra\\\\ecom-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./app.css\";\nimport FormInput from \"./components/FormInput\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [values, setValues] = useState({\n    FullName: \"\",\n    email: \"\",\n    password: \"\",\n    ConfirmPassword: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"Full Name\",\n    type: \"text\",\n    placeholder: \"FullName\",\n    errorMessage: \"Full Name should be 3-16 characters and shouldn't include any special character!\",\n    label: \"Full Name\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    errorMessage: \"It should be a valid email address!\",\n    label: \"Email\",\n    required: true\n  }, {\n    id: 4,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    errorMessage: \"Password should be 8-20 characters with atleast 1(letter,number and special character!)\",\n    label: \"Password\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n    required: true\n  }, {\n    id: 4,\n    name: \"confirmpassword\",\n    type: \"password\",\n    placeholder: \"confirm Password\",\n    errorMessage: \" Password don't match\",\n    label: \"confirm Password\",\n    pattern: values.password,\n    required: true\n  }];\n  const handleSubmit = e => {\n    e.preventDefault();\n    const email = e.target[1].value;\n    const username = e.target[0].value;\n    const password = e.target[2].value;\n    const confirm_password = e.target[3].value;\n    const data = {\n      email,\n      username,\n      password,\n      confirm_password\n    };\n    console.log(data);\n    axios.post('http://localhost:5000/signup', data).then(response => {\n      console.log(response.data.message);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const onChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n        ...input,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"h\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AtXPJUk8l+EJK2N2MP31/JQvfrY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","FormInput","axios","jsxDEV","_jsxDEV","App","_s","values","setValues","FullName","email","password","ConfirmPassword","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","target","value","username","confirm_password","data","console","log","post","then","response","message","catch","error","onChange","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","input","_c","$RefreshReg$"],"sources":["D:/Telstra/ecom-frontend/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./app.css\";\r\nimport FormInput from \"./components/FormInput\";\r\nimport axios from \"axios\"\r\n\r\nconst App = () => {\r\n  const [values, setValues] = useState({\r\n    FullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    ConfirmPassword:\"\"\r\n  });\r\n\r\n  const inputs = [\r\n    {\r\n      id: 1,\r\n      name: \"Full Name\",\r\n      type: \"text\",\r\n      placeholder: \"FullName\",\r\n      errorMessage:\r\n        \"Full Name should be 3-16 characters and shouldn't include any special character!\",\r\n      label: \"Full Name\",\r\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\r\n      required: true,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"email\",\r\n      type: \"email\",\r\n      placeholder: \"Email\",\r\n      errorMessage: \"It should be a valid email address!\",\r\n      label: \"Email\",\r\n      required: true,\r\n    },\r\n  \r\n    {\r\n      id: 4,\r\n      name: \"password\",\r\n      type: \"password\",\r\n      placeholder: \"Password\",\r\n      errorMessage:\r\n        \"Password should be 8-20 characters with atleast 1(letter,number and special character!)\",\r\n      label: \"Password\",\r\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\r\n      required: true,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"confirmpassword\",\r\n      type: \"password\",\r\n      placeholder: \"confirm Password\",\r\n      errorMessage:\r\n        \" Password don't match\",\r\n      label: \"confirm Password\",\r\n      pattern: values.password,\r\n      required: true,\r\n    },\r\n  \r\n  ];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const email = e.target[1].value\r\n    const username = e.target[0].value\r\n    const password = e.target[2].value\r\n    const confirm_password = e.target[3].value\r\n    const data = {email,username,password,confirm_password}\r\n    console.log(data)\r\n    axios.post('http://localhost:5000/signup', data)\r\n    .then(response => {\r\n      console.log(response.data.message);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  \r\n    \r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Create Account</h1>\r\n        {inputs.map((input) => (\r\n          <FormInput\r\n            key={input.id}\r\n            {...input}\r\n            value={values[input.name]}\r\n            onChange={onChange}\r\n          />\r\n        ))}\r\n        <button>Sign up</button>\r\n        <p className=\"mt-3\">Already have an account?<h>Login</h></p>\r\n     \r\n      </form>\r\n      \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}